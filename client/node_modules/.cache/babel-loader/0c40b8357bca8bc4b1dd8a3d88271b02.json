{"ast":null,"code":"import _toConsumableArray from\"/Users/virginiavelasquezsoto/FullStack/Wahlcionario/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import{applyMiddleware,createStore,compose}from'redux';import{createBrowserHistory}from'history';import thunk from'redux-thunk';import{routerMiddleware}from'connected-react-router';import{createLogger}from'redux-logger';import createRootReducer from'../reducers/reducer';export var history=createBrowserHistory();var logger=createLogger({level:'info',collapsed:true,logger:console,predicate:function predicate(getState,action){return true;}});export default function createReduxStore(preloadedState){var enhancers=[];var applyMid=[];var middleware=[routerMiddleware(history)];if(process.env.NODE_ENV==='development'){var devToolsExtension=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||logger;if(typeof devToolsExtension==='function'){enhancers.push(devToolsExtension());}}if(process.env.NODE_ENV==='development'){applyMid=[].concat(middleware,[thunk,logger]);}else{applyMid=[].concat(middleware,[thunk]);}var composedEnhancers=compose(applyMiddleware.apply(void 0,_toConsumableArray(applyMid)));var store=createStore(createRootReducer(history),preloadedState,composedEnhancers);if(module.hot){module.hot.accept('../reducers/reducer',function(){var nextRootReducer=require('../reducers/reducer');store.replaceReducer(nextRootReducer);});}return store;}","map":{"version":3,"sources":["/Users/virginiavelasquezsoto/FullStack/Wahlcionario/client/src/redux/store/store.js"],"names":["applyMiddleware","createStore","compose","createBrowserHistory","thunk","routerMiddleware","createLogger","createRootReducer","history","logger","level","collapsed","console","predicate","getState","action","createReduxStore","preloadedState","enhancers","applyMid","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","push","composedEnhancers","store","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"qJAAA,OAASA,eAAT,CAA0BC,WAA1B,CAAuCC,OAAvC,KAAsD,OAAtD,CACA,OAASC,oBAAT,KAAqC,SAArC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,gBAAT,KAAiC,wBAAjC,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAEA,MAAO,IAAMC,CAAAA,OAAO,CAAGL,oBAAoB,EAApC,CAEP,GAAMM,CAAAA,MAAM,CAAGH,YAAY,CAAC,CAC1BI,KAAK,CAAE,MADmB,CAE1BC,SAAS,CAAE,IAFe,CAG1BF,MAAM,CAAEG,OAHkB,CAI1BC,SAAS,CAAE,mBAACC,QAAD,CAAWC,MAAX,QAAsB,KAAtB,EAJe,CAAD,CAA3B,CAOA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,cAA1B,CAA0C,CACvD,GAAMC,CAAAA,SAAS,CAAG,EAAlB,CACA,GAAIC,CAAAA,QAAQ,CAAG,EAAf,CACA,GAAMC,CAAAA,UAAU,CAAG,CAACf,gBAAgB,CAACG,OAAD,CAAjB,CAAnB,CAEA,GAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA7B,CAA4C,CAC1C,GAAMC,CAAAA,iBAAiB,CACrBC,MAAM,CAACC,oCAAP,EAA+CjB,MADjD,CAEA,GAAI,MAAOe,CAAAA,iBAAP,GAA6B,UAAjC,CAA6C,CAC3CN,SAAS,CAACS,IAAV,CAAeH,iBAAiB,EAAhC,EACD,CACF,CACD,GAAIH,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,aAA7B,CAA4C,CAC1CJ,QAAQ,WAAOC,UAAP,EAAmBhB,KAAnB,CAA0BK,MAA1B,EAAR,CACD,CAFD,IAEO,CACLU,QAAQ,WAAOC,UAAP,EAAmBhB,KAAnB,EAAR,CACD,CAED,GAAMwB,CAAAA,iBAAiB,CAAG1B,OAAO,CAACF,eAAe,MAAf,2BAAmBmB,QAAnB,EAAD,CAAjC,CAEA,GAAMU,CAAAA,KAAK,CAAG5B,WAAW,CACvBM,iBAAiB,CAACC,OAAD,CADM,CAEvBS,cAFuB,CAGvBW,iBAHuB,CAAzB,CAMA,GAAIE,MAAM,CAACC,GAAX,CAAgB,CACdD,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,qBAAlB,CAAyC,UAAM,CAC7C,GAAMC,CAAAA,eAAe,CAAGC,OAAO,CAAC,qBAAD,CAA/B,CACAL,KAAK,CAACM,cAAN,CAAqBF,eAArB,EACD,CAHD,EAID,CAED,MAAOJ,CAAAA,KAAP,CACD","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\nimport createRootReducer from '../reducers/reducer';\n\nexport const history = createBrowserHistory();\n\nconst logger = createLogger({\n  level: 'info',\n  collapsed: true,\n  logger: console,\n  predicate: (getState, action) => true,\n});\n\nexport default function createReduxStore(preloadedState) {\n  const enhancers = [];\n  let applyMid = [];\n  const middleware = [routerMiddleware(history)];\n\n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension =\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || logger;\n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension());\n    }\n  }\n  if (process.env.NODE_ENV === 'development') {\n    applyMid = [...middleware, thunk, logger];\n  } else {\n    applyMid = [...middleware, thunk];\n  }\n\n  const composedEnhancers = compose(applyMiddleware(...applyMid));\n\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composedEnhancers,\n  );\n\n  if (module.hot) {\n    module.hot.accept('../reducers/reducer', () => {\n      const nextRootReducer = require('../reducers/reducer');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}