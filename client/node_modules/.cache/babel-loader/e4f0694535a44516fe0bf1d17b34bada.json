{"ast":null,"code":"import { applyMiddleware, createStore, compose } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\nimport createRootReducer from '../reducers/reducer';\nexport const history = createBrowserHistory();\nconst logger = createLogger({\n  level: 'info',\n  collapsed: true,\n  logger: console,\n  predicate: (getState, action) => true\n});\nexport default function createReduxStore(preloadedState) {\n  const enhancers = [];\n  let applyMid = [];\n  const middleware = [routerMiddleware(history)];\n\n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || logger;\n\n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension());\n    }\n  }\n\n  if (process.env.NODE_ENV === 'development') {\n    applyMid = [...middleware, thunk, logger];\n  } else {\n    applyMid = [...middleware, thunk];\n  }\n\n  const composedEnhancers = compose(applyMiddleware(...applyMid));\n  const store = createStore(createRootReducer(history), preloadedState, composedEnhancers);\n\n  if (module.hot) {\n    module.hot.accept('../reducers/reducer', () => {\n      const nextRootReducer = require('../reducers/reducer');\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/Users/virginiavelasquezsoto/FullStack/Wahlcionario/client/src/redux/store/store.js"],"names":["applyMiddleware","createStore","compose","createBrowserHistory","thunk","routerMiddleware","createLogger","createRootReducer","history","logger","level","collapsed","console","predicate","getState","action","createReduxStore","preloadedState","enhancers","applyMid","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","push","composedEnhancers","store","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA,OAAO,MAAMC,OAAO,GAAGL,oBAAoB,EAApC;AAEP,MAAMM,MAAM,GAAGH,YAAY,CAAC;AAC1BI,EAAAA,KAAK,EAAE,MADmB;AAE1BC,EAAAA,SAAS,EAAE,IAFe;AAG1BF,EAAAA,MAAM,EAAEG,OAHkB;AAI1BC,EAAAA,SAAS,EAAE,CAACC,QAAD,EAAWC,MAAX,KAAsB;AAJP,CAAD,CAA3B;AAOA,eAAe,SAASC,gBAAT,CAA0BC,cAA1B,EAA0C;AACvD,QAAMC,SAAS,GAAG,EAAlB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,QAAMC,UAAU,GAAG,CAACf,gBAAgB,CAACG,OAAD,CAAjB,CAAnB;;AAEA,MAAIa,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,UAAMC,iBAAiB,GACrBC,MAAM,CAACC,oCAAP,IAA+CjB,MADjD;;AAEA,QAAI,OAAOe,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CN,MAAAA,SAAS,CAACS,IAAV,CAAeH,iBAAiB,EAAhC;AACD;AACF;;AACD,MAAIH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CJ,IAAAA,QAAQ,GAAG,CAAC,GAAGC,UAAJ,EAAgBhB,KAAhB,EAAuBK,MAAvB,CAAX;AACD,GAFD,MAEO;AACLU,IAAAA,QAAQ,GAAG,CAAC,GAAGC,UAAJ,EAAgBhB,KAAhB,CAAX;AACD;;AAED,QAAMwB,iBAAiB,GAAG1B,OAAO,CAACF,eAAe,CAAC,GAAGmB,QAAJ,CAAhB,CAAjC;AAEA,QAAMU,KAAK,GAAG5B,WAAW,CACvBM,iBAAiB,CAACC,OAAD,CADM,EAEvBS,cAFuB,EAGvBW,iBAHuB,CAAzB;;AAMA,MAAIE,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,qBAAlB,EAAyC,MAAM;AAC7C,YAAMC,eAAe,GAAGC,OAAO,CAAC,qBAAD,CAA/B;;AACAL,MAAAA,KAAK,CAACM,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AAED,SAAOJ,KAAP;AACD","sourcesContent":["import { applyMiddleware, createStore, compose } from 'redux';\nimport { createBrowserHistory } from 'history';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createLogger } from 'redux-logger';\nimport createRootReducer from '../reducers/reducer';\n\nexport const history = createBrowserHistory();\n\nconst logger = createLogger({\n  level: 'info',\n  collapsed: true,\n  logger: console,\n  predicate: (getState, action) => true,\n});\n\nexport default function createReduxStore(preloadedState) {\n  const enhancers = [];\n  let applyMid = [];\n  const middleware = [routerMiddleware(history)];\n\n  if (process.env.NODE_ENV === 'development') {\n    const devToolsExtension =\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || logger;\n    if (typeof devToolsExtension === 'function') {\n      enhancers.push(devToolsExtension());\n    }\n  }\n  if (process.env.NODE_ENV === 'development') {\n    applyMid = [...middleware, thunk, logger];\n  } else {\n    applyMid = [...middleware, thunk];\n  }\n\n  const composedEnhancers = compose(applyMiddleware(...applyMid));\n\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composedEnhancers,\n  );\n\n  if (module.hot) {\n    module.hot.accept('../reducers/reducer', () => {\n      const nextRootReducer = require('../reducers/reducer');\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}