{"ast":null,"code":"import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createBrowserHistory } from \"history\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"../reducers/reducer\";\nimport { createLogger } from \"redux-logger\";\nexport const history = createBrowserHistory();\nconst logger = createLogger({\n  collapsed: true\n});\nexport default function createReduxStore(preloadedState) {\n  const enhancers = [];\n  let applyMid = [];\n  const middleware = [routerMiddleware(history)];\n\n  if (process.env.NODE_ENV === \"development\") {\n    const devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || logger;\n\n    if (typeof devToolsExtension === \"function\") {\n      enhancers.push(devToolsExtension());\n    }\n  }\n\n  if (process.env.NODE_ENV === \"development\") {\n    applyMid = [...middleware, thunk, logger];\n  } else {\n    applyMid = [...middleware, thunk];\n  }\n\n  const composedEnhancers = compose(applyMiddleware(...applyMid));\n  const store = createStore(createRootReducer(history), preloadedState, composedEnhancers);\n  return store;\n}","map":{"version":3,"sources":["/Users/virginiavelasquezsoto/FullStack/Wahlcionario/client/src/redux/store/store.js"],"names":["applyMiddleware","createStore","compose","createBrowserHistory","thunk","routerMiddleware","createRootReducer","createLogger","history","logger","collapsed","createReduxStore","preloadedState","enhancers","applyMid","middleware","process","env","NODE_ENV","devToolsExtension","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","push","composedEnhancers","store"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,SAASC,YAAT,QAA6B,cAA7B;AAEA,OAAO,MAAMC,OAAO,GAAGL,oBAAoB,EAApC;AAEP,MAAMM,MAAM,GAAGF,YAAY,CAAC;AAC1BG,EAAAA,SAAS,EAAE;AADe,CAAD,CAA3B;AAIA,eAAe,SAASC,gBAAT,CAA0BC,cAA1B,EAA0C;AACvD,QAAMC,SAAS,GAAG,EAAlB;AACA,MAAIC,QAAQ,GAAG,EAAf;AACA,QAAMC,UAAU,GAAG,CAACV,gBAAgB,CAACG,OAAD,CAAjB,CAAnB;;AAEA,MAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,UAAMC,iBAAiB,GACrBC,MAAM,CAACC,oCAAP,IAA+CZ,MADjD;;AAEA,QAAI,OAAOU,iBAAP,KAA6B,UAAjC,EAA6C;AAC3CN,MAAAA,SAAS,CAACS,IAAV,CAAeH,iBAAiB,EAAhC;AACD;AACF;;AACD,MAAIH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1CJ,IAAAA,QAAQ,GAAG,CAAC,GAAGC,UAAJ,EAAgBX,KAAhB,EAAuBK,MAAvB,CAAX;AACD,GAFD,MAEO;AACLK,IAAAA,QAAQ,GAAG,CAAC,GAAGC,UAAJ,EAAgBX,KAAhB,CAAX;AACD;;AAED,QAAMmB,iBAAiB,GAAGrB,OAAO,CAACF,eAAe,CAAC,GAAGc,QAAJ,CAAhB,CAAjC;AAEA,QAAMU,KAAK,GAAGvB,WAAW,CACvBK,iBAAiB,CAACE,OAAD,CADM,EAEvBI,cAFuB,EAGvBW,iBAHuB,CAAzB;AAMA,SAAOC,KAAP;AACD","sourcesContent":["import { applyMiddleware, createStore, compose } from \"redux\";\nimport { createBrowserHistory } from \"history\";\nimport thunk from \"redux-thunk\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport createRootReducer from \"../reducers/reducer\";\nimport { createLogger } from \"redux-logger\";\n\nexport const history = createBrowserHistory();\n\nconst logger = createLogger({\n  collapsed: true,\n});\n\nexport default function createReduxStore(preloadedState) {\n  const enhancers = [];\n  let applyMid = [];\n  const middleware = [routerMiddleware(history)];\n\n  if (process.env.NODE_ENV === \"development\") {\n    const devToolsExtension =\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || logger;\n    if (typeof devToolsExtension === \"function\") {\n      enhancers.push(devToolsExtension());\n    }\n  }\n  if (process.env.NODE_ENV === \"development\") {\n    applyMid = [...middleware, thunk, logger];\n  } else {\n    applyMid = [...middleware, thunk];\n  }\n\n  const composedEnhancers = compose(applyMiddleware(...applyMid));\n\n  const store = createStore(\n    createRootReducer(history),\n    preloadedState,\n    composedEnhancers\n  );\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}